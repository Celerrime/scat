#!/usr/bin/env ruby

require 'fileutils'

VERSION_PATH  = "cmd/VERSION"
GEN_PACKAGE   = "./cmd"
MAIN_PACKAGE  = "./cmd"
DIFF_URL      = "https://github.com/Roman2K/scat/compare/%s...%s"

def release
  # ensure clean index
  log "checking if index is clean"
  if system "git status --porcelain | grep -v '^??' -q"
    raise "dirty index"
  end

  #Â current version
  ver = File.read(VERSION_PATH, encoding: Encoding::UTF_8).chomp
  ver =~ /\A\d+\z/ or raise "invalid format in %s" % VERSION_PATH
  ver = ver.to_i
  log "current version: %d" % ver

  # tag
  tag = "v%d" % ver
  log "new tag: %s" % tag
  system "git", "tag", tag \
    or raise "`git tag` failed"

  # new version
  new_ver = ver + 1
  log "new version: %d" % new_ver
  File.write(VERSION_PATH, "%d\n" % new_ver)

  # generate version.go
  system "go", "generate", GEN_PACKAGE \
    or raise "`go generate` failed"

  # commit
  log "committing"
  system "git", "commit", "-e", "-v", "-m", "starting v%s" % new_ver,
    VERSION_PATH,
    GEN_PACKAGE \
      or raise "`git commit` failed"

  # release message
  rel_msg = "v%d\n\n[Changelog](%s)" % [
    ver,
    DIFF_URL % ["v%d" % (ver-1), "v%d" % ver],
  ]

  # binaries
  out_dir = ".gox"
  Dir.mkdir(out_dir)
  begin
    system "gox", "-output=.gox/scat-{{.OS}}-{{.Arch}}", MAIN_PACKAGE \
      or raise "`gox` failed"
    files = Dir[out_dir + "/*"]

    # upload
    system "hub", "release", "create", "--draft", "-m", rel_msg,
      *files.flat_map { |f| ["-a", f] },
      "v%d" % ver \
        or raise "`hub release` failed"
  ensure
    FileUtils.rm_r(out_dir)
  end
end

def log(msg)
  $stdout.puts msg
end

release
